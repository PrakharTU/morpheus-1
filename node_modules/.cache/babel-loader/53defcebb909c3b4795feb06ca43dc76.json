{"ast":null,"code":"var _jsxFileName = \"C:\\\\WareHouse\\\\PiggyMe\\\\Morpheus\\\\morpheus-master\\\\morpheus-master\\\\src\\\\App.js\";\nimport React, { Component } from 'react'; // import Main from './Main';\n\nimport Transaction from './Transaction';\nimport Web3 from 'web3'; // import { convertPatternsToTasks } from 'fast-glob/out/managers/tasks';\n\nlet _web3;\n\nvar factory_abi = [{\n  \"constant\": true,\n  \"inputs\": [],\n  \"name\": \"b\",\n  \"outputs\": [{\n    \"name\": \"\",\n    \"type\": \"string\"\n  }],\n  \"payable\": false,\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"constant\": false,\n  \"inputs\": [{\n    \"name\": \"Vold\",\n    \"type\": \"uint256\"\n  }, {\n    \"name\": \"sender\",\n    \"type\": \"address\"\n  }, {\n    \"name\": \"receiver\",\n    \"type\": \"address\"\n  }, {\n    \"name\": \"realrequiredPrice\",\n    \"type\": \"uint64\"\n  }, {\n    \"name\": \"category\",\n    \"type\": \"string\"\n  }],\n  \"name\": \"createContract\",\n  \"outputs\": [],\n  \"payable\": false,\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"constant\": false,\n  \"inputs\": [{\n    \"name\": \"a\",\n    \"type\": \"string\"\n  }],\n  \"name\": \"setString\",\n  \"outputs\": [],\n  \"payable\": true,\n  \"stateMutability\": \"payable\",\n  \"type\": \"function\"\n}, {\n  \"constant\": true,\n  \"inputs\": [{\n    \"name\": \"\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"allDeals\",\n  \"outputs\": [{\n    \"name\": \"\",\n    \"type\": \"address\"\n  }],\n  \"payable\": false,\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}];\nvar factory_contract; //  else {\n//     console.log('No web3? You should consider trying MetaMask!');\n//     var web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\n// }\n\nclass App extends Component {\n  componentWillMount() {\n    if (typeof window.web3 !== 'undefined') {\n      _web3 = new Web3(window.web3.currentProvider);\n      console.log('mai', _web3.eth.accounts[0]);\n\n      _web3.eth.getAccounts().then(e => {\n        console.log('es', e[0]);\n        _web3.eth.defaultAccount = e[0];\n      }); // run the following code only once. Metamask will ask for permission. allow it. then you can comment following code for subsequent ...\n      // window.ethereum.enable().then((account) =>{\n      //     const defaultAccount = account[0]\n      //     _web3.eth.defaultAccount = defaultAccount\n      //     console.log(defaultAccount);\n      // })\n\n\n      console.log('under transaction ', this.props._web3); //var deal_abi=new this.props._web3.eth.contract([{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint64\"}],\"name\":\"addmoney\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"refundSecurity\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"satisfyDeal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenContractAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"lockDeal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PiggyBankContractAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"Vnew\",\"type\":\"uint256\"},{\"name\":\"useBank\",\"type\":\"bool\"}],\"name\":\"claimReward\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newRequiredToken\",\"type\":\"uint256\"},{\"name\":\"newrealrequiredPrice\",\"type\":\"uint256\"}],\"name\":\"updaterequiredBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"Vold\",\"type\":\"uint256\"},{\"name\":\"sender\",\"type\":\"address\"},{\"name\":\"receiver\",\"type\":\"address\"},{\"name\":\"realrequiredPrice\",\"type\":\"uint256\"},{\"name\":\"category\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"eventupdaterequiredBalance\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"eventaddmoney\",\"type\":\"event\"}]);\n\n      var factory_abi = factory_contract = new this.props._web3.eth.Contract(factory_abi, '0x9b632825d14bc92f43cf2c0df62fa40d16dd2b2c', {\n        from: this.props._web3.eth.defaulAccount\n      });\n      console.log('ads', factory_contract); //      factory_contract.methods.setString(\"prayag\").send({from:'0xC4ad5E50BA51a94cA71bB80E9379b382E054093d',value: 1000000000000}).then((err,res)=>console.log('ddsfine'));\n    } else {\n      console.log('Unable to connect to metamask');\n    }\n  }\n\n  componentDidUpdate() {}\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Transaction, {\n      _web3: _web3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\WareHouse\\PiggyMe\\Morpheus\\morpheus-master\\morpheus-master\\src\\App.js"],"names":["React","Component","Transaction","Web3","_web3","factory_abi","factory_contract","App","componentWillMount","window","web3","currentProvider","console","log","eth","accounts","getAccounts","then","e","defaultAccount","props","Contract","from","defaulAccount","componentDidUpdate","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B,C,CACA;;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,MAAjB,C,CACA;;AACA,IAAIC,KAAJ;;AACA,IAAIC,WAAW,GAAC,CAAC;AAAC,cAAW,IAAZ;AAAiB,YAAS,EAA1B;AAA6B,UAAO,GAApC;AAAwC,aAAU,CAAC;AAAC,YAAO,EAAR;AAAW,YAAO;AAAlB,GAAD,CAAlD;AAAgF,aAAU,KAA1F;AAAgG,qBAAkB,MAAlH;AAAyH,UAAO;AAAhI,CAAD,EAA6I;AAAC,cAAW,KAAZ;AAAkB,YAAS,CAAC;AAAC,YAAO,MAAR;AAAe,YAAO;AAAtB,GAAD,EAAkC;AAAC,YAAO,QAAR;AAAiB,YAAO;AAAxB,GAAlC,EAAqE;AAAC,YAAO,UAAR;AAAmB,YAAO;AAA1B,GAArE,EAA0G;AAAC,YAAO,mBAAR;AAA4B,YAAO;AAAnC,GAA1G,EAAuJ;AAAC,YAAO,UAAR;AAAmB,YAAO;AAA1B,GAAvJ,CAA3B;AAAuN,UAAO,gBAA9N;AAA+O,aAAU,EAAzP;AAA4P,aAAU,KAAtQ;AAA4Q,qBAAkB,YAA9R;AAA2S,UAAO;AAAlT,CAA7I,EAA2c;AAAC,cAAW,KAAZ;AAAkB,YAAS,CAAC;AAAC,YAAO,GAAR;AAAY,YAAO;AAAnB,GAAD,CAA3B;AAA0D,UAAO,WAAjE;AAA6E,aAAU,EAAvF;AAA0F,aAAU,IAApG;AAAyG,qBAAkB,SAA3H;AAAqI,UAAO;AAA5I,CAA3c,EAAmmB;AAAC,cAAW,IAAZ;AAAiB,YAAS,CAAC;AAAC,YAAO,EAAR;AAAW,YAAO;AAAlB,GAAD,CAA1B;AAAyD,UAAO,UAAhE;AAA2E,aAAU,CAAC;AAAC,YAAO,EAAR;AAAW,YAAO;AAAlB,GAAD,CAArF;AAAoH,aAAU,KAA9H;AAAoI,qBAAkB,MAAtJ;AAA6J,UAAO;AAApK,CAAnmB,CAAhB;AACA,IAAIC,gBAAJ,C,CAGE;AACA;AACA;AACA;;AACF,MAAMC,GAAN,SAAkBN,SAAlB,CAA2B;AACzBO,EAAAA,kBAAkB,GAAE;AAClB,QAAI,OAAOC,MAAM,CAACC,IAAd,KAAuB,WAA3B,EAAwC;AACtCN,MAAAA,KAAK,GAAG,IAAID,IAAJ,CAASM,MAAM,CAACC,IAAP,CAAYC,eAArB,CAAR;AACDC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBT,KAAK,CAACU,GAAN,CAAUC,QAAV,CAAmB,CAAnB,CAAlB;;AAEAX,MAAAA,KAAK,CAACU,GAAN,CAAUE,WAAV,GAAwBC,IAAxB,CAA6BC,CAAC,IAAE;AAACN,QAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAiBK,CAAC,CAAC,CAAD,CAAlB;AAAuBd,QAAAA,KAAK,CAACU,GAAN,CAAUK,cAAV,GAAyBD,CAAC,CAAC,CAAD,CAA1B;AAAgC,OAAxF,EAJuC,CAMtC;AACE;AACA;AACA;AACA;AAEA;;;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAiC,KAAKO,KAAL,CAAWhB,KAA5C,EAboC,CAepC;;AACD,UAAIC,WAAW,GACdC,gBAAgB,GAAC,IAAI,KAAKc,KAAL,CAAWhB,KAAX,CAAiBU,GAAjB,CAAqBO,QAAzB,CAAkChB,WAAlC,EAA+C,4CAA/C,EAA6F;AAACiB,QAAAA,IAAI,EAAE,KAAKF,KAAL,CAAWhB,KAAX,CAAiBU,GAAjB,CAAqBS;AAA5B,OAA7F,CADlB;AAECX,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBP,gBAAlB,EAlBoC,CAmB1C;AAGE,KAtBA,MAuBI;AACHM,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACD;AACD;;AACDW,EAAAA,kBAAkB,GAAG,CAEpB;;AACDC,EAAAA,MAAM,GAAE;AACN,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAErB,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAMD;;AAvCwB;;AAyC3B,eAAeG,GAAf","sourcesContent":["import React, {Component} from 'react';\n// import Main from './Main';\nimport Transaction from './Transaction';\nimport Web3 from 'web3'\n// import { convertPatternsToTasks } from 'fast-glob/out/managers/tasks';\nlet _web3;\nvar factory_abi=[{\"constant\":true,\"inputs\":[],\"name\":\"b\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"Vold\",\"type\":\"uint256\"},{\"name\":\"sender\",\"type\":\"address\"},{\"name\":\"receiver\",\"type\":\"address\"},{\"name\":\"realrequiredPrice\",\"type\":\"uint64\"},{\"name\":\"category\",\"type\":\"string\"}],\"name\":\"createContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"a\",\"type\":\"string\"}],\"name\":\"setString\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allDeals\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}];\nvar factory_contract;\n\n   \n  //  else {\n  //     console.log('No web3? You should consider trying MetaMask!');\n  //     var web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\n  // }\nclass App extends Component{\n  componentWillMount(){\n    if (typeof window.web3 !== 'undefined') {\n      _web3 = new Web3(window.web3.currentProvider);\n     console.log('mai',_web3.eth.accounts[0]); \n    \n     _web3.eth.getAccounts().then(e=>{console.log('es',e[0]);_web3.eth.defaultAccount=e[0]; });\n\n      // run the following code only once. Metamask will ask for permission. allow it. then you can comment following code for subsequent ...\n        // window.ethereum.enable().then((account) =>{\n        //     const defaultAccount = account[0]\n        //     _web3.eth.defaultAccount = defaultAccount\n        //     console.log(defaultAccount);\n        \n        // })\n        console.log('under transaction ',this.props._web3)\n\n        //var deal_abi=new this.props._web3.eth.contract([{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint64\"}],\"name\":\"addmoney\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"refundSecurity\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"satisfyDeal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenContractAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"lockDeal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PiggyBankContractAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"Vnew\",\"type\":\"uint256\"},{\"name\":\"useBank\",\"type\":\"bool\"}],\"name\":\"claimReward\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newRequiredToken\",\"type\":\"uint256\"},{\"name\":\"newrealrequiredPrice\",\"type\":\"uint256\"}],\"name\":\"updaterequiredBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"Vold\",\"type\":\"uint256\"},{\"name\":\"sender\",\"type\":\"address\"},{\"name\":\"receiver\",\"type\":\"address\"},{\"name\":\"realrequiredPrice\",\"type\":\"uint256\"},{\"name\":\"category\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"eventupdaterequiredBalance\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"eventaddmoney\",\"type\":\"event\"}]);\n       var factory_abi=\n        factory_contract=new this.props._web3.eth.Contract(factory_abi, '0x9b632825d14bc92f43cf2c0df62fa40d16dd2b2c', {from: this.props._web3.eth.defaulAccount})   ;\n        console.log('ads',factory_contract);\n  //      factory_contract.methods.setString(\"prayag\").send({from:'0xC4ad5E50BA51a94cA71bB80E9379b382E054093d',value: 1000000000000}).then((err,res)=>console.log('ddsfine'));\n   \n      \n   }\n   else {\n     console.log('Unable to connect to metamask')\n   }\n  }\n  componentDidUpdate() {\n\n  }\n  render(){\n    return(\n      <div>\n        <Transaction _web3={_web3}/>\n        {/* <Main/> */}\n      </div>\n    );\n  }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}