{"ast":null,"code":"var _jsxFileName = \"C:\\\\WareHouse\\\\PiggyMe\\\\Morpheus\\\\morpheus-master\\\\morpheus-master\\\\src\\\\App.js\";\nimport React, { Component } from 'react'; // import Main from './Main';\n\nimport Transaction from './Transaction';\nimport Web3 from 'web3'; // import { convertPatternsToTasks } from 'fast-glob/out/managers/tasks';\n\nlet _web3; //  else {\n//     console.log('No web3? You should consider trying MetaMask!');\n//     var web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\n// }\n\n\nclass App extends Component {\n  componentWillMount() {\n    if (typeof window.web3 !== 'undefined') {\n      _web3 = new Web3(window.web3.currentProvider);\n      console.log('mai', _web3.eth.accounts[0]);\n\n      _web3.eth.getAccounts().then(e => {\n        console.log('es', e[0]);\n        _web3.eth.defaultAccount = e[0];\n      }); // run the following code only once. Metamask will ask for permission. allow it. then you can comment following code for subsequent ...\n      // window.ethereum.enable().then((account) =>{\n      //     const defaultAccount = account[0]\n      //     _web3.eth.defaultAccount = defaultAccount\n      //     console.log(defaultAccount);\n      // })\n\n    } else {\n      console.log('Unable to connect to metamask');\n    }\n  }\n\n  componentDidUpdate() {}\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Transaction, {\n      _web3: _web3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\WareHouse\\PiggyMe\\Morpheus\\morpheus-master\\morpheus-master\\src\\App.js"],"names":["React","Component","Transaction","Web3","_web3","App","componentWillMount","window","web3","currentProvider","console","log","eth","accounts","getAccounts","then","e","defaultAccount","componentDidUpdate","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B,C,CACA;;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,MAAjB,C,CACA;;AACA,IAAIC,KAAJ,C,CAIE;AACA;AACA;AACA;;;AACF,MAAMC,GAAN,SAAkBJ,SAAlB,CAA2B;AACzBK,EAAAA,kBAAkB,GAAE;AAClB,QAAI,OAAOC,MAAM,CAACC,IAAd,KAAuB,WAA3B,EAAwC;AACtCJ,MAAAA,KAAK,GAAG,IAAID,IAAJ,CAASI,MAAM,CAACC,IAAP,CAAYC,eAArB,CAAR;AACDC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBP,KAAK,CAACQ,GAAN,CAAUC,QAAV,CAAmB,CAAnB,CAAlB;;AAEAT,MAAAA,KAAK,CAACQ,GAAN,CAAUE,WAAV,GAAwBC,IAAxB,CAA6BC,CAAC,IAAE;AAACN,QAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAiBK,CAAC,CAAC,CAAD,CAAlB;AAAuBZ,QAAAA,KAAK,CAACQ,GAAN,CAAUK,cAAV,GAAyBD,CAAC,CAAC,CAAD,CAA1B;AAAgC,OAAxF,EAJuC,CAKtC;AACE;AACA;AACA;AACA;AAEA;;AAEJ,KAbA,MAcI;AACHN,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACD;AACD;;AACDO,EAAAA,kBAAkB,GAAG,CAEpB;;AACDC,EAAAA,MAAM,GAAE;AACN,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAEf,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAMD;;AA9BwB;;AAgC3B,eAAeC,GAAf","sourcesContent":["import React, {Component} from 'react';\n// import Main from './Main';\nimport Transaction from './Transaction';\nimport Web3 from 'web3'\n// import { convertPatternsToTasks } from 'fast-glob/out/managers/tasks';\nlet _web3;\n\n\n   \n  //  else {\n  //     console.log('No web3? You should consider trying MetaMask!');\n  //     var web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\n  // }\nclass App extends Component{\n  componentWillMount(){\n    if (typeof window.web3 !== 'undefined') {\n      _web3 = new Web3(window.web3.currentProvider);\n     console.log('mai',_web3.eth.accounts[0]); \n    \n     _web3.eth.getAccounts().then(e=>{console.log('es',e[0]);_web3.eth.defaultAccount=e[0]; });\n      // run the following code only once. Metamask will ask for permission. allow it. then you can comment following code for subsequent ...\n        // window.ethereum.enable().then((account) =>{\n        //     const defaultAccount = account[0]\n        //     _web3.eth.defaultAccount = defaultAccount\n        //     console.log(defaultAccount);\n         \n        // })\n      \n   }\n   else {\n     console.log('Unable to connect to metamask')\n   }\n  }\n  componentDidUpdate() {\n\n  }\n  render(){\n    return(\n      <div>\n        <Transaction _web3={_web3}/>\n        {/* <Main/> */}\n      </div>\n    );\n  }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}