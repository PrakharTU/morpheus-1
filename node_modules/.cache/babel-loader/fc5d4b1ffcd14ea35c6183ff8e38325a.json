{"ast":null,"code":"var _jsxFileName = \"C:\\\\WareHouse\\\\PiggyMe\\\\Morpheus\\\\morpheus-master\\\\morpheus-master\\\\src\\\\App.js\";\nimport React, { Component } from 'react'; // import Main from './Main';\n\nimport Transaction from './Transaction';\nimport Web3 from 'web3'; // import { convertPatternsToTasks } from 'fast-glob/out/managers/tasks';\n\nlet _web3;\n\nvar factory_abi = [{\n  \"constant\": true,\n  \"inputs\": [],\n  \"name\": \"b\",\n  \"outputs\": [{\n    \"name\": \"\",\n    \"type\": \"string\"\n  }],\n  \"payable\": false,\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"constant\": false,\n  \"inputs\": [{\n    \"name\": \"Vold\",\n    \"type\": \"uint256\"\n  }, {\n    \"name\": \"sender\",\n    \"type\": \"address\"\n  }, {\n    \"name\": \"receiver\",\n    \"type\": \"address\"\n  }, {\n    \"name\": \"realrequiredPrice\",\n    \"type\": \"uint64\"\n  }, {\n    \"name\": \"category\",\n    \"type\": \"string\"\n  }],\n  \"name\": \"createContract\",\n  \"outputs\": [],\n  \"payable\": false,\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"constant\": false,\n  \"inputs\": [{\n    \"name\": \"a\",\n    \"type\": \"string\"\n  }],\n  \"name\": \"setString\",\n  \"outputs\": [],\n  \"payable\": true,\n  \"stateMutability\": \"payable\",\n  \"type\": \"function\"\n}, {\n  \"constant\": true,\n  \"inputs\": [{\n    \"name\": \"\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"allDeals\",\n  \"outputs\": [{\n    \"name\": \"\",\n    \"type\": \"address\"\n  }],\n  \"payable\": false,\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}];\nvar factoryContract; //  else {\n//     console.log('No web3? You should consider trying MetaMask!');\n//     var web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\n// }\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      thisAccount: undefined\n    };\n  }\n\n  componentWillMount() {\n    if (typeof window.web3 !== 'undefined') {\n      _web3 = new Web3(window.web3.currentProvider);\n      console.log('adx');\n\n      _web3.eth.getAccounts().then(e => {\n        this.setState({\n          thisAccount: e[0]\n        });\n      }); // run the following code only once. Metamask will ask for permission. allow it. then you can comment following code for subsequent ...\n      // window.ethereum.enable().then((account) =>{\n      //     const defaultAccount = account[0]\n      //     _web3.eth.defaultAccount = defaultAccount\n      //     console.log(defaultAccount);\n      // })\n\n\n      factoryContract = new _web3.eth.Contract(factory_abi, '0x9b632825d14bc92f43cf2c0df62fa40d16dd2b2c', {\n        from: _web3.eth.defaultAccount\n      });\n    } else {\n      console.log('Unable to connect to metamask');\n    }\n  }\n\n  async componentDidUpdate() {}\n\n  render() {\n    if (this.state.thisAccount) {\n      console.log('int ca', this.state.thisAccount);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Transaction, {\n        factoryContract: factoryContract,\n        thisAccount: this.state.thisAccount,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }));\n    } else return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Wait ! Your Account is not yet loaded\");\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\WareHouse\\PiggyMe\\Morpheus\\morpheus-master\\morpheus-master\\src\\App.js"],"names":["React","Component","Transaction","Web3","_web3","factory_abi","factoryContract","App","constructor","props","state","thisAccount","undefined","componentWillMount","window","web3","currentProvider","console","log","eth","getAccounts","then","e","setState","Contract","from","defaultAccount","componentDidUpdate","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n// import Main from './Main';\nimport Transaction from './Transaction';\nimport Web3 from 'web3'\n// import { convertPatternsToTasks } from 'fast-glob/out/managers/tasks';\nlet _web3;\nvar factory_abi=[{\"constant\":true,\"inputs\":[],\"name\":\"b\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"Vold\",\"type\":\"uint256\"},{\"name\":\"sender\",\"type\":\"address\"},{\"name\":\"receiver\",\"type\":\"address\"},{\"name\":\"realrequiredPrice\",\"type\":\"uint64\"},{\"name\":\"category\",\"type\":\"string\"}],\"name\":\"createContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"a\",\"type\":\"string\"}],\"name\":\"setString\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allDeals\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}];\nvar factoryContract;\n\n   \n  //  else {\n  //     console.log('No web3? You should consider trying MetaMask!');\n  //     var web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\n  // }\nclass App extends Component{\n  constructor(props){\n    super(props);\n    this.state= {\n      thisAccount:undefined\n    }\n  }\n\n   componentWillMount(){\n    if (typeof window.web3 !== 'undefined') {\n      _web3 = new Web3(window.web3.currentProvider);\n      console.log('adx');\n      _web3.eth.getAccounts().then(e=>{\n        this.setState({\n          thisAccount:e[0]\n        })\n      });\n  \n        // run the following code only once. Metamask will ask for permission. allow it. then you can comment following code for subsequent ...\n          // window.ethereum.enable().then((account) =>{\n          //     const defaultAccount = account[0]\n          //     _web3.eth.defaultAccount = defaultAccount\n          //     console.log(defaultAccount);\n          \n          // })\n   \n\n          factoryContract=new _web3.eth.Contract(factory_abi, '0x9b632825d14bc92f43cf2c0df62fa40d16dd2b2c', {from:_web3.eth.defaultAccount})   ;\n\n\n      \n   }\n   else {\n     console.log('Unable to connect to metamask');\n     \n   }\n  }\n  async componentDidUpdate() {\n\n  }\n  render(){\n    if(this.state.thisAccount)\n        {console.log('int ca',this.state.thisAccount);\n            return(\n              <div>\n                <Transaction factoryContract={factoryContract} thisAccount={this.state.thisAccount}/>\n                {/* <Main/> */}\n              </div>\n            );\n    }\n    else\n     return (  <p>Wait ! Your Account is not yet loaded</p>)\n    \n    \n   \n  }\n \n\n  \n}\nexport default App;"]},"metadata":{},"sourceType":"module"}