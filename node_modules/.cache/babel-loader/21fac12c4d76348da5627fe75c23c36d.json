{"ast":null,"code":"var _jsxFileName = \"C:\\\\WareHouse\\\\PiggyMe\\\\Morpheus\\\\morpheus-master\\\\morpheus-master\\\\src\\\\App.js\";\nimport React, { Component } from 'react'; // import Main from './Main';\n\nimport Transaction from './Transaction';\nimport Web3 from 'web3'; // import { convertPatternsToTasks } from 'fast-glob/out/managers/tasks';\n\nlet _web3; //  else {\n//     console.log('No web3? You should consider trying MetaMask!');\n//     var web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\n// }\n\n\nclass App extends Component {\n  componentWillMount() {\n    if (typeof window.web3 !== 'undefined') {\n      _web3 = new Web3(window.web3.currentProvider); // _web3.eth.getAccounts().then(e=>console.log('e',e[0]));\n      // run the following code only once. Metamask will ask for permission. allow it. then you can comment following code for subsequent ...\n\n      window.ethereum.enable().then(account => {\n        const defaultAccount = account[0];\n        _web3.eth.defaultAccount = defaultAccount;\n        console.log(defaultAccount);\n      });\n      var factory_abi = new Web3.eth.contract([{\n        \"constant\": false,\n        \"inputs\": [{\n          \"name\": \"Vold\",\n          \"type\": \"uint256\"\n        }, {\n          \"name\": \"sender\",\n          \"type\": \"address\"\n        }, {\n          \"name\": \"receiver\",\n          \"type\": \"address\"\n        }, {\n          \"name\": \"realrequiredPrice\",\n          \"type\": \"uint64\"\n        }, {\n          \"name\": \"category\",\n          \"type\": \"string\"\n        }],\n        \"name\": \"createContract\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n      }, {\n        \"constant\": true,\n        \"inputs\": [{\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }],\n        \"name\": \"allDeals\",\n        \"outputs\": [{\n          \"name\": \"\",\n          \"type\": \"address\"\n        }],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      }]);\n      console.log('f', factory_abi);\n    } else {\n      console.log('Unable to connect to metamask');\n    }\n  }\n\n  componentDidUpdate() {}\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Transaction, {\n      _web3: _web3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\WareHouse\\PiggyMe\\Morpheus\\morpheus-master\\morpheus-master\\src\\App.js"],"names":["React","Component","Transaction","Web3","_web3","App","componentWillMount","window","web3","currentProvider","ethereum","enable","then","account","defaultAccount","eth","console","log","factory_abi","contract","componentDidUpdate","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B,C,CACA;;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,MAAjB,C,CACA;;AACA,IAAIC,KAAJ,C,CAIE;AACA;AACA;AACA;;;AACF,MAAMC,GAAN,SAAkBJ,SAAlB,CAA2B;AACzBK,EAAAA,kBAAkB,GAAE;AAClB,QAAI,OAAOC,MAAM,CAACC,IAAd,KAAuB,WAA3B,EAAwC;AACtCJ,MAAAA,KAAK,GAAG,IAAID,IAAJ,CAASI,MAAM,CAACC,IAAP,CAAYC,eAArB,CAAR,CADsC,CAGvC;AACC;;AACEF,MAAAA,MAAM,CAACG,QAAP,CAAgBC,MAAhB,GAAyBC,IAAzB,CAA+BC,OAAD,IAAY;AACtC,cAAMC,cAAc,GAAGD,OAAO,CAAC,CAAD,CAA9B;AACAT,QAAAA,KAAK,CAACW,GAAN,CAAUD,cAAV,GAA2BA,cAA3B;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYH,cAAZ;AAEH,OALD;AAMA,UAAII,WAAW,GAAC,IAAIf,IAAI,CAACY,GAAL,CAASI,QAAb,CAAsB,CAAC;AAAC,oBAAW,KAAZ;AAAkB,kBAAS,CAAC;AAAC,kBAAO,MAAR;AAAe,kBAAO;AAAtB,SAAD,EAAkC;AAAC,kBAAO,QAAR;AAAiB,kBAAO;AAAxB,SAAlC,EAAqE;AAAC,kBAAO,UAAR;AAAmB,kBAAO;AAA1B,SAArE,EAA0G;AAAC,kBAAO,mBAAR;AAA4B,kBAAO;AAAnC,SAA1G,EAAuJ;AAAC,kBAAO,UAAR;AAAmB,kBAAO;AAA1B,SAAvJ,CAA3B;AAAuN,gBAAO,gBAA9N;AAA+O,mBAAU,EAAzP;AAA4P,mBAAU,KAAtQ;AAA4Q,2BAAkB,YAA9R;AAA2S,gBAAO;AAAlT,OAAD,EAA+T;AAAC,oBAAW,IAAZ;AAAiB,kBAAS,CAAC;AAAC,kBAAO,EAAR;AAAW,kBAAO;AAAlB,SAAD,CAA1B;AAAyD,gBAAO,UAAhE;AAA2E,mBAAU,CAAC;AAAC,kBAAO,EAAR;AAAW,kBAAO;AAAlB,SAAD,CAArF;AAAoH,mBAAU,KAA9H;AAAoI,2BAAkB,MAAtJ;AAA6J,gBAAO;AAApK,OAA/T,CAAtB,CAAhB;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAgBC,WAAhB;AACJ,KAbA,MAcI;AACHF,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACD;AACD;;AACDG,EAAAA,kBAAkB,GAAG,CAEpB;;AACDC,EAAAA,MAAM,GAAE;AACN,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAEjB,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAMD;;AA9BwB;;AAgC3B,eAAeC,GAAf","sourcesContent":["import React, {Component} from 'react';\n// import Main from './Main';\nimport Transaction from './Transaction';\nimport Web3 from 'web3'\n// import { convertPatternsToTasks } from 'fast-glob/out/managers/tasks';\nlet _web3;\n\n\n   \n  //  else {\n  //     console.log('No web3? You should consider trying MetaMask!');\n  //     var web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\n  // }\nclass App extends Component{\n  componentWillMount(){\n    if (typeof window.web3 !== 'undefined') {\n      _web3 = new Web3(window.web3.currentProvider);\n    \n     // _web3.eth.getAccounts().then(e=>console.log('e',e[0]));\n      // run the following code only once. Metamask will ask for permission. allow it. then you can comment following code for subsequent ...\n        window.ethereum.enable().then((account) =>{\n            const defaultAccount = account[0]\n            _web3.eth.defaultAccount = defaultAccount\n            console.log(defaultAccount);\n         \n        })\n        var factory_abi=new Web3.eth.contract([{\"constant\":false,\"inputs\":[{\"name\":\"Vold\",\"type\":\"uint256\"},{\"name\":\"sender\",\"type\":\"address\"},{\"name\":\"receiver\",\"type\":\"address\"},{\"name\":\"realrequiredPrice\",\"type\":\"uint64\"},{\"name\":\"category\",\"type\":\"string\"}],\"name\":\"createContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allDeals\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]);\n        console.log('f',factory_abi);\n   }\n   else {\n     console.log('Unable to connect to metamask')\n   }\n  }\n  componentDidUpdate() {\n\n  }\n  render(){\n    return(\n      <div>\n        <Transaction _web3={_web3}/>\n        {/* <Main/> */}\n      </div>\n    );\n  }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}